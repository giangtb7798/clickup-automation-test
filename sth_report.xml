<?xml version="1.0"?>
<OWASPZAPReport programName="OWASP ZAP" version="2.12.0" generated="Wed, 21 Jun 2023 16:28:59">
	
		<site name="https://api.segment.io" host="api.segment.io" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://search.clickup-prod.com" host="search.clickup-prod.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://www.linkedin.com" host="www.linkedin.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://px.ads.linkedin.com" host="px.ads.linkedin.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://content.webproduct.clickup.com" host="content.webproduct.clickup.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://cdn.linkedin.oribi.io" host="cdn.linkedin.oribi.io" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://data.webproduct.clickup.com" host="data.webproduct.clickup.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://snap.licdn.com" host="snap.licdn.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://cdn.pendo.io" host="cdn.pendo.io" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://cdn.segment.com" host="cdn.segment.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://api.canny.io" host="api.canny.io" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://cnv.event.prod.bidr.io" host="cnv.event.prod.bidr.io" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://google.com" host="google.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://pixel.pointmediatracker.com" host="pixel.pointmediatracker.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://canny.io" host="canny.io" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://fonts.gstatic.com" host="fonts.gstatic.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://accounts.google.com" host="accounts.google.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://www.gstatic.com" host="www.gstatic.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://apis.google.com" host="apis.google.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://rum.browser-intake-datadoghq.com" host="rum.browser-intake-datadoghq.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10098</pluginid>
						<alertRef>10098</alertRef>
						<alert>Cross-Domain Misconfiguration</alert>
						<name>Cross-Domain Misconfiguration</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://rum.browser-intake-datadoghq.com/api/v2/rum?ddsource=browser&amp;ddtags=sdk_version%3A4.36.0%2Capi%3Afetch%2Cenv%3Aprod%2Cservice%3Aclickup-frontend%2Cversion%3A2.184.6&amp;dd-api-key=pub089a05bea4344937ede32c8e6b2c19f6&amp;dd-evp-origin-version=4.36.0&amp;dd-evp-origin=browser&amp;dd-request-id=bcc5dd6b-12ef-4ef0-98ba-7e6d37d7c8b8&amp;batch_time=1687364911377</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>access-control-allow-origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://rum.browser-intake-datadoghq.com/api/v2/rum?ddsource=browser&amp;ddtags=sdk_version%3A4.36.0%2Capi%3Afetch%2Cenv%3Aprod%2Cservice%3Aclickup-frontend%2Cversion%3A2.184.6&amp;dd-api-key=pub089a05bea4344937ede32c8e6b2c19f6&amp;dd-evp-origin-version=4.36.0&amp;dd-evp-origin=browser&amp;dd-request-id=db4f64ad-8aeb-491d-999b-b5f75c933539&amp;batch_time=1687364910155</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>access-control-allow-origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).&lt;/p&gt;&lt;p&gt;Configure the &quot;Access-Control-Allow-Origin&quot; HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy&lt;/p&gt;</reference>
						<cweid>264</cweid>
						<wascid>14</wascid>
						<sourceid>88</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://rum.browser-intake-datadoghq.com/api/v2/rum?ddsource=browser&amp;ddtags=sdk_version%3A4.36.0%2Capi%3Afetch%2Cenv%3Aprod%2Cservice%3Aclickup-frontend%2Cversion%3A2.184.6&amp;dd-api-key=pub089a05bea4344937ede32c8e6b2c19f6&amp;dd-evp-origin-version=4.36.0&amp;dd-evp-origin=browser&amp;dd-request-id=bcc5dd6b-12ef-4ef0-98ba-7e6d37d7c8b8&amp;batch_time=1687364911377</uri>
									<method>POST</method>
									<param>Cache-Control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://rum.browser-intake-datadoghq.com/api/v2/rum?ddsource=browser&amp;ddtags=sdk_version%3A4.36.0%2Capi%3Afetch%2Cenv%3Aprod%2Cservice%3Aclickup-frontend%2Cversion%3A2.184.6&amp;dd-api-key=pub089a05bea4344937ede32c8e6b2c19f6&amp;dd-evp-origin-version=4.36.0&amp;dd-evp-origin=browser&amp;dd-request-id=db4f64ad-8aeb-491d-999b-b5f75c933539&amp;batch_time=1687364910155</uri>
									<method>POST</method>
									<param>Cache-Control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>88</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://ws.clickup.com" host="ws.clickup.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://ws.clickup.com/ws</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;http://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;http://tools.ietf.org/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>74</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://stats.g.doubleclick.net" host="stats.g.doubleclick.net" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10036</pluginid>
						<alertRef>10036</alertRef>
						<alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
						<name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://stats.g.doubleclick.net/g/collect?v=2&amp;tid=G-CMNNJGSJVV&amp;cid=1556889482.1687364910&amp;gtm=45je36e2&amp;aip=1</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>Golfe2</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;http://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007&lt;/p&gt;&lt;p&gt;http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx&lt;/p&gt;&lt;p&gt;http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>62</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://stats.g.doubleclick.net/g/collect?v=2&amp;tid=G-CMNNJGSJVV&amp;cid=1556889482.1687364910&amp;gtm=45je36e2&amp;aip=1</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;http://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;http://tools.ietf.org/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>62</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://www.google.com" host="www.google.com" port="443" ssl="true">
			<alerts>
				
			</alerts>
		</site>
	
	
		<site name="https://analytics.google.com" host="analytics.google.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>3</pluginid>
						<alertRef>3-1</alertRef>
						<alert>Session ID in URL Rewrite</alert>
						<name>Session ID in URL Rewrite</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://analytics.google.com/g/collect?v=2&amp;tid=G-CMNNJGSJVV&amp;gtm=45je36e2&amp;_p=1959828334&amp;_gaz=1&amp;cid=1556889482.1687364910&amp;ul=en-us&amp;sr=800x600&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uam=&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;_s=1&amp;sid=1687364909&amp;sct=1&amp;seg=0&amp;dl=https%3A%2F%2Fapp.clickup.com%2F&amp;dt=ClickUp&amp;en=page_view&amp;_fv=1&amp;_nsi=1&amp;_ss=1</uri>
									<method>POST</method>
									<param>sid</param>
									<attack></attack>
									<evidence>1687364909</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>47</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10036</pluginid>
						<alertRef>10036</alertRef>
						<alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
						<name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://analytics.google.com/g/collect?v=2&amp;tid=G-CMNNJGSJVV&amp;gtm=45je36e2&amp;_p=1959828334&amp;_gaz=1&amp;cid=1556889482.1687364910&amp;ul=en-us&amp;sr=800x600&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uam=&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;_s=1&amp;sid=1687364909&amp;sct=1&amp;seg=0&amp;dl=https%3A%2F%2Fapp.clickup.com%2F&amp;dt=ClickUp&amp;en=page_view&amp;_fv=1&amp;_nsi=1&amp;_ss=1</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>Golfe2</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;http://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007&lt;/p&gt;&lt;p&gt;http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx&lt;/p&gt;&lt;p&gt;http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>47</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://analytics.google.com/g/collect?v=2&amp;tid=G-CMNNJGSJVV&amp;gtm=45je36e2&amp;_p=1959828334&amp;_gaz=1&amp;cid=1556889482.1687364910&amp;ul=en-us&amp;sr=800x600&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uam=&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;_s=1&amp;sid=1687364909&amp;sct=1&amp;seg=0&amp;dl=https%3A%2F%2Fapp.clickup.com%2F&amp;dt=ClickUp&amp;en=page_view&amp;_fv=1&amp;_nsi=1&amp;_ss=1</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;http://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;http://tools.ietf.org/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>47</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://sdk.split.io" host="sdk.split.io" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10098</pluginid>
						<alertRef>10098</alertRef>
						<alert>Cross-Domain Misconfiguration</alert>
						<name>Cross-Domain Misconfiguration</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/DUMMY_KEY</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/splitChanges?since=-1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).&lt;/p&gt;&lt;p&gt;Configure the &quot;Access-Control-Allow-Origin&quot; HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy&lt;/p&gt;</reference>
						<cweid>264</cweid>
						<wascid>14</wascid>
						<sourceid>81</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>2</pluginid>
						<alertRef>2</alertRef>
						<alert>Private IP Disclosure</alert>
						<name>Private IP Disclosure</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://sdk.split.io/api/splitChanges?since=-1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>172.31.16.175</evidence>
									<otherinfo>172.31.16.175
172.31.16.175
</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;172.31.16.175&lt;/p&gt;&lt;p&gt;172.31.16.175&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc1918&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>83</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10021</pluginid>
						<alertRef>10021</alertRef>
						<alert>X-Content-Type-Options Header Missing</alert>
						<name>X-Content-Type-Options Header Missing</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>GET</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/DUMMY_KEY</uri>
									<method>GET</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>OPTIONS</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/DUMMY_KEY</uri>
									<method>OPTIONS</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/splitChanges?since=-1</uri>
									<method>OPTIONS</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
						</instances>
						<count>5</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>81</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10019</pluginid>
						<alertRef>10019</alertRef>
						<alert>Content-Type Header Missing</alert>
						<name>Content-Type Header Missing</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Content-Type header was either missing or empty.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>OPTIONS</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/DUMMY_KEY</uri>
									<method>OPTIONS</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/splitChanges?since=-1</uri>
									<method>OPTIONS</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Ensure each page is setting the specific and appropriate content-type value for the content being delivered.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;</reference>
						<cweid>345</cweid>
						<wascid>12</wascid>
						<sourceid>43</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>GET</method>
									<param>Cache-Control</param>
									<attack></attack>
									<evidence>no-transform, max-age=60, s-maxage=60</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/DUMMY_KEY</uri>
									<method>GET</method>
									<param>Cache-Control</param>
									<attack></attack>
									<evidence>no-transform, max-age=60, s-maxage=60</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/splitChanges?since=-1</uri>
									<method>GET</method>
									<param>Cache-Control</param>
									<attack></attack>
									<evidence>no-transform, max-age=60, s-maxage=60</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>81</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10050</pluginid>
						<alertRef>10050</alertRef>
						<alert>Retrieved from Cache</alert>
						<name>Retrieved from Cache</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as &quot;proxy&quot; caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. &lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>HIT</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Age: 0</evidence>
									<otherinfo>The presence of the &apos;Age&apos; header indicates that that a HTTP/1.1 compliant caching server is in use.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/DUMMY_KEY</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>HIT</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/377</uri>
									<method>OPTIONS</method>
									<param></param>
									<attack></attack>
									<evidence>HIT</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/mySegments/DUMMY_KEY</uri>
									<method>OPTIONS</method>
									<param></param>
									<attack></attack>
									<evidence>HIT</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://sdk.split.io/api/splitChanges?since=-1</uri>
									<method>OPTIONS</method>
									<param></param>
									<attack></attack>
									<evidence>HIT</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>6</count>
						<solution>&lt;p&gt;Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache, no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma: no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>82</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://googleads.g.doubleclick.net" host="googleads.g.doubleclick.net" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10010</pluginid>
						<alertRef>10010</alertRef>
						<alert>Cookie No HttpOnly Flag</alert>
						<name>Cookie No HttpOnly Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/11004387261/?random=1687364908847&amp;cv=11&amp;fst=1687364908847&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/611957890/?random=1687364908777&amp;cv=11&amp;fst=1687364908777&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/617640813/?random=1687364908842&amp;cv=11&amp;fst=1687364908842&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/867030291/?random=1687364908837&amp;cv=11&amp;fst=1687364908837&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that the HttpOnly flag is set for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-community/HttpOnly&lt;/p&gt;</reference>
						<cweid>1004</cweid>
						<wascid>13</wascid>
						<sourceid>31</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10054</pluginid>
						<alertRef>10054</alertRef>
						<alert>Cookie with SameSite Attribute None</alert>
						<name>Cookie with SameSite Attribute None</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set with its SameSite attribute set to &quot;none&quot;, which means that the cookie can be sent as a result of a &apos;cross-site&apos; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/11004387261/?random=1687364908847&amp;cv=11&amp;fst=1687364908847&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/611957890/?random=1687364908777&amp;cv=11&amp;fst=1687364908777&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/617640813/?random=1687364908842&amp;cv=11&amp;fst=1687364908842&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/867030291/?random=1687364908837&amp;cv=11&amp;fst=1687364908837&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param>test_cookie</param>
									<attack></attack>
									<evidence>Set-Cookie: test_cookie</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either &apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
						<cweid>1275</cweid>
						<wascid>13</wascid>
						<sourceid>31</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/11004387261/?random=1687364908847&amp;cv=11&amp;fst=1687364908847&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/611957890/?random=1687364908777&amp;cv=11&amp;fst=1687364908777&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/617640813/?random=1687364908842&amp;cv=11&amp;fst=1687364908842&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/867030291/?random=1687364908837&amp;cv=11&amp;fst=1687364908837&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;http://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;http://tools.ietf.org/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>31</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/11004387261/?random=1687364908847&amp;cv=11&amp;fst=1687364908847&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;(function(){var s = {};(function(){/*  Copyright The Closure Library Authors. SPDX-License-Identifier: Apache-2.0 */ var e={},f=&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/611957890/?random=1687364908777&amp;cv=11&amp;fst=1687364908777&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;(function(){var s = {};(function(){/*  Copyright The Closure Library Authors. SPDX-License-Identifier: Apache-2.0 */ var e={},f=&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/617640813/?random=1687364908842&amp;cv=11&amp;fst=1687364908842&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;(function(){var s = {};(function(){/*  Copyright The Closure Library Authors. SPDX-License-Identifier: Apache-2.0 */ var e={},f=&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/867030291/?random=1687364908837&amp;cv=11&amp;fst=1687364908837&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;(function(){var s = {};(function(){/*  Copyright The Closure Library Authors. SPDX-License-Identifier: Apache-2.0 */ var e={},f=&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;(function(){var s = {};(function(){/*  Copyright The Closure Library Authors. SPDX-License-Identifier: Apache-2.0 */ var e={},f=&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>31</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90033</pluginid>
						<alertRef>90033</alertRef>
						<alert>Loosely Scoped Cookie</alert>
						<name>Loosely Scoped Cookie</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/11004387261/?random=1687364908847&amp;cv=11&amp;fst=1687364908847&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was: 
googleads.g.doubleclick.net
test_cookie=CheckForPermission
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/611957890/?random=1687364908777&amp;cv=11&amp;fst=1687364908777&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was: 
googleads.g.doubleclick.net
test_cookie=CheckForPermission
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/617640813/?random=1687364908842&amp;cv=11&amp;fst=1687364908842&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was: 
googleads.g.doubleclick.net
test_cookie=CheckForPermission
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googleads.g.doubleclick.net/pagead/viewthroughconversion/867030291/?random=1687364908837&amp;cv=11&amp;fst=1687364908837&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be36e2&amp;u_w=800&amp;u_h=600&amp;url=https%3A%2F%2Fapp.clickup.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=ClickUp&amp;auid=699749698.1687364909&amp;uaa=x86&amp;uab=64&amp;uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.106%7CHeadlessChrome%3B114.0.5735.106&amp;uamb=0&amp;uap=Linux&amp;uapv=5.15.0&amp;uaw=0&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was: 
googleads.g.doubleclick.net
test_cookie=CheckForPermission
</otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Always scope cookies to a FQDN (Fully Qualified Domain Name).&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The origin domain used for comparison was: &lt;/p&gt;&lt;p&gt;googleads.g.doubleclick.net&lt;/p&gt;&lt;p&gt;test_cookie=CheckForPermission&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc6265#section-4.1&lt;/p&gt;&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;&lt;p&gt;http://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies&lt;/p&gt;</reference>
						<cweid>565</cweid>
						<wascid>15</wascid>
						<sourceid>31</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://www.googletagmanager.com" host="www.googletagmanager.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10098</pluginid>
						<alertRef>10098</alertRef>
						<alert>Cross-Domain Misconfiguration</alert>
						<name>Cross-Domain Misconfiguration</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=G-CMNNJGSJVV&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).&lt;/p&gt;&lt;p&gt;Configure the &quot;Access-Control-Allow-Origin&quot; HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy&lt;/p&gt;</reference>
						<cweid>264</cweid>
						<wascid>14</wascid>
						<sourceid>21</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10021</pluginid>
						<alertRef>10021</alertRef>
						<alert>X-Content-Type-Options Header Missing</alert>
						<name>X-Content-Type-Options Header Missing</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813</uri>
									<method>GET</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=G-CMNNJGSJVV&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param>X-Content-Type-Options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>21</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>db</evidence>
									<otherinfo>The following pattern was used: \bDB\b and was detected 10 times, the first in the element starting with: &quot;b.indexOf(d))return}return d},cb=function(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected 3 times, the first in the element starting with: &quot;var Bg=function(a,b){for(var c=0;c&lt;b.length;c++){if(void 0===a)return;a=a[b[c]]}return a},Cg=function(a,b){var c=b.preHit;if(c){&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected 7 times, the first in the element starting with: &quot;String(Number(a.port)||(&quot;http&quot;===g?80:&quot;https&quot;===g?443:&quot;&quot;));break;case &quot;path&quot;:a.pathname||a.hostname||xb(&quot;TAGGING&quot;,1);f=&quot;/&quot;===a.p&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>SELECT</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected 2 times, the first in the element starting with: &quot;Aj=!0;var tj=/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}/i,Bj=/@(gmail|googlemail)\./i,qj=/support|noreply/i,vj=&quot;SCRIPT STYLE IMG SVG&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>db</evidence>
									<otherinfo>The following pattern was used: \bDB\b and was detected 10 times, the first in the element starting with: &quot;b.indexOf(d))return}return d},cb=function(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected 3 times, the first in the element starting with: &quot;var Bg=function(a,b){for(var c=0;c&lt;b.length;c++){if(void 0===a)return;a=a[b[c]]}return a},Cg=function(a,b){var c=b.preHit;if(c){&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected 7 times, the first in the element starting with: &quot;String(Number(a.port)||(&quot;http&quot;===g?80:&quot;https&quot;===g?443:&quot;&quot;));break;case &quot;path&quot;:a.pathname||a.hostname||xb(&quot;TAGGING&quot;,1);f=&quot;/&quot;===a.p&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=AW-617640813&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>SELECT</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected 2 times, the first in the element starting with: &quot;Aj=!0;var tj=/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}/i,Bj=/@(gmail|googlemail)\./i,qj=/support|noreply/i,vj=&quot;SCRIPT STYLE IMG SVG&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=G-CMNNJGSJVV&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>db</evidence>
									<otherinfo>The following pattern was used: \bDB\b and was detected 7 times, the first in the element starting with: &quot;b.indexOf(d))return}return d},cb=function(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=G-CMNNJGSJVV&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected 2 times, the first in the element starting with: &quot;var Bg=function(a,b){for(var c=0;c&lt;b.length;c++){if(void 0===a)return;a=a[b[c]]}return a},Cg=function(a,b){var c=b.preHit;if(c){&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=G-CMNNJGSJVV&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected 7 times, the first in the element starting with: &quot;String(Number(a.port)||(&quot;http&quot;===g?80:&quot;https&quot;===g?443:&quot;&quot;));break;case &quot;path&quot;:a.pathname||a.hostname||xb(&quot;TAGGING&quot;,1);f=&quot;/&quot;===a.p&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=G-CMNNJGSJVV&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>SELECT</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;d=0;d&lt;c.length&amp;&amp;1E4&gt;d;d++){var e=c[d];if(!(0&lt;=vj.indexOf(e.tagName.toUpperCase()))&amp;&amp;e.children instanceof HTMLCollection){for(va&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtag/js?id=G-CMNNJGSJVV&amp;l=dataLayer&amp;cx=c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>username</evidence>
									<otherinfo>The following pattern was used: \bUSERNAME\b and was detected 3 times, the first in the element starting with: &quot;&quot;runtime&quot;:[ [50,&quot;__ccd_auto_redact&quot;,[46,&quot;a&quot;],[50,&quot;u&quot;,[46,&quot;bh&quot;],[36,[2,[15,&quot;bh&quot;],&quot;replace&quot;,[7,[15,&quot;t&quot;],&quot;\\$1&quot;]]]],[50,&quot;v&quot;,[46,&quot;bh&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>db</evidence>
									<otherinfo>The following pattern was used: \bDB\b and was detected 10 times, the first in the element starting with: &quot;b.indexOf(d))return}return d},cb=function(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>debug</evidence>
									<otherinfo>The following pattern was used: \bDEBUG\b and was detected 5 times, the first in the element starting with: &quot;&quot;__cvt_62822627_18&quot;:{&quot;access_globals&quot;:{&quot;keys&quot;:[{&quot;key&quot;:&quot;_tfa&quot;,&quot;read&quot;:true,&quot;write&quot;:true,&quot;execute&quot;:false},{&quot;key&quot;:&quot;__tfa_pixel_init&quot;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected 5 times, the first in the element starting with: &quot; Copyright (c) 2014 Derek Brans, MIT license https://github.com/krux/postscribe/blob/master/LICENSE. Portions derived from simpl&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected 10 times, the first in the element starting with: &quot;  &quot;tags&quot;:[{&quot;function&quot;:&quot;__html&quot;,&quot;priority&quot;:99,&quot;metadata&quot;:[&quot;map&quot;],&quot;once_per_load&quot;:true,&quot;vtp_html&quot;:&quot;\u003Cscript type=\&quot;text\/gtmsc&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>SELECT</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;d=0;d&lt;c.length&amp;&amp;1E4&gt;d;d++){var e=c[d];if(!(0&lt;=vj.indexOf(e.tagName.toUpperCase()))&amp;&amp;e.children instanceof HTMLCollection){for(va&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.googletagmanager.com/gtm.js?id=GTM-KPP2P6X</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>username</evidence>
									<otherinfo>The following pattern was used: \bUSERNAME\b and was detected in the element starting with: &quot;  &quot;macros&quot;:[{&quot;function&quot;:&quot;__e&quot;},{&quot;function&quot;:&quot;__u&quot;,&quot;vtp_component&quot;:&quot;URL&quot;,&quot;vtp_enableMultiQueryKeys&quot;:false,&quot;vtp_enableIgnoreEmptyQu&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>19</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bDB\b and was detected 10 times, the first in the element starting with: &quot;b.indexOf(d))return}return d},cb=function(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>21</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://app-cdn.clickup.com" host="app-cdn.clickup.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10036</pluginid>
						<alertRef>10036</alertRef>
						<alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
						<name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://app-cdn.clickup.com/apps_client_src_app_loader_loader_component_ts.044cc23cf8a3a6.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/common.8861b5e27dc854.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs-v3_shared_core-components_src_button_ts-libs-v3_shared_core-components_src_icon_-eeeb5e.9455f2bdeada13.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs-v3_shared_core-components_src_lib_components_icon_icon_module_ts.eafef32611a281.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs-v3_shared_core-components_src_lib_components_tooltip-v3_directives_tooltip_direc-7313f9.56edb1bb0ad6e8.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_auth_common_src_lib_login-form_login-form_module_ts-libs_auth_common_src_lib_sin-9873d7.9bc5b09b00940b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_common_pipes_src_lib_keys-pipe_keys_pipe_ts-libs_core_shared-components_src_lib_-1fb076.6062d6c513dbad.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_common_utils_src_lib_dashboard-doc_dashboard-doc_utilities_ts.fcbec7e7d93d4d.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_checkbox_checkbox_component_ts-libs_core_shared-c-f73f51.a89d4d407cd259.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_select_select_component_ts.445bdd9e10e827.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_sharing-help-modal_sharing-help-modal_component_ts.ad5b368d1b106b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_status-list_status-list_component_ts-libs_core_sh-869ac2.e15ac06283ecb1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_react_angular-bridge_src_lib_injector_Injector_tsx-node_modules_pnpm_react-dom_1-6ccc95.6ff3bfa9bbe4bb.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_sharing_shared-components_src_lib_permission-options-dropdown_permission-options-5f490a.832768d50b1ac8.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_views_lock_src_index_ts.264bd54f655c6b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_apollo_react-common_3_1_4__types_react_18_0_25_apollo-client_2_6_10-98f1a0.904bb8eac00d34.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_formatjs_ecma402-abstract_1_9_8_node_modules_formatjs_ecma402-abstr-6ec257.4584bae9d216a3.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_formatjs_intl-displaynames_5_2_3_node_modules_formatjs_intl-display-54e27a.1e29a92312ba9e.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_fortawesome_free-solid-svg-icons_5_15_3_node_modules_fortawesome_fr-4a5c5a.25db63a0a11dd2.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_symbol-observable_1_2_0_node_modules_symbol-observable_es_index_js--67bcf3.cdd7c95eb4c1b2.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/intl-displaynames.7453e95f49ef51.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/libs_auth_login_src_index_ts-libs_core_directives_src_lib_link_link_directive_ts.5633fd607752b8.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/libs_auth_session-timeout_src_lib_services_idle-timeout_idle-timeout_service_ts.57fb21da315640.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/libs_localization_utils_src_lib_ecodes_index_ts.30f966a1fdb0a1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/libs_toast_src_lib_index_ts.250ac8fbfec9c1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/node_modules_pnpm_ua-parser-js_0_7_33_node_modules_ua-parser-js_src_ua-parser_js.7ffb395500d18d.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/polyfills.c620a95d87d8d0.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/react-app.b38737d7309e5d.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/runtime.19589abbdb50b2.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/scripts.b9ce81de51a331.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/styles.0c939deab9a703.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>AmazonS3</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>31</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;http://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007&lt;/p&gt;&lt;p&gt;http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx&lt;/p&gt;&lt;p&gt;http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>85</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10096</pluginid>
						<alertRef>10096</alertRef>
						<alert>Timestamp Disclosure - Unix</alert>
						<name>Timestamp Disclosure - Unix</name>
						<riskcode>1</riskcode>
						<confidence>1</confidence>
						<riskdesc>Low (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;A timestamp was disclosed by the application/web server - Unix&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://app-cdn.clickup.com/styles.0c939deab9a703.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>1428571429</evidence>
									<otherinfo>1428571429, which evaluates to: 2015-04-09 09:23:49</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;1428571429, which evaluates to: 2015-04-09 09:23:49&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://projects.webappsec.org/w/page/13246936/Information%20Leakage&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>14</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://app-cdn.clickup.com/apps_client_src_app_loader_loader_component_ts.044cc23cf8a3a6.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;apps_client_src_app_loader_loader_component_ts&quot;],{912&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/common.8861b5e27dc854.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>User</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;common&quot;],{899612:()=&gt;{Intl.ListFormat&amp;&amp;&quot;function&quot;==typeof Intl.Lis&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs-v3_shared_core-components_src_lib_components_icon_icon_module_ts.eafef32611a281.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>toDo</evidence>
									<otherinfo>The following pattern was used: \bTODO\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs-v3_shared_core-components_src_lib_compon&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_auth_common_src_lib_login-form_login-form_module_ts-libs_auth_common_src_lib_sin-9873d7.9bc5b09b00940b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>admin</evidence>
									<otherinfo>The following pattern was used: \bADMIN\b and was detected 2 times, the first in the element starting with: &quot;`,d=$localize`:@@common_email&#x241f;d1042b2c63c5ee5bbcfa0e1dacf83c0d87af64d6&#x241f;7701856692300549841: Email `,t=$localize`:@@forms_placeho&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_auth_common_src_lib_login-form_login-form_module_ts-libs_auth_common_src_lib_sin-9873d7.9bc5b09b00940b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 2 times, the first in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_auth_common_src_lib_login-form_login-for&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_category_common_src_lib_category-list_category-list_service_ts-libs_common_pipes-957f53.a7fb92812f5878.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_category_common_src_lib_category-list_ca&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_common_pipes_src_lib_keys-pipe_keys_pipe_ts-libs_core_shared-components_src_lib_-1fb076.6062d6c513dbad.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 3 times, the first in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_common_pipes_src_lib_keys-pipe_keys_pipe&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_checkbox_checkbox_component_ts-libs_core_shared-c-f73f51.a89d4d407cd259.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_core_shared-components_src_lib_checkbox_&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_select_select_component_ts.445bdd9e10e827.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_core_shared-components_src_lib_select_se&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_sharing-help-modal_sharing-help-modal_component_ts.ad5b368d1b106b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Admin</evidence>
									<otherinfo>The following pattern was used: \bADMIN\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_core_shared-components_src_lib_sharing-h&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_core_shared-components_src_lib_status-list_status-list_component_ts-libs_core_sh-869ac2.e15ac06283ecb1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_core_shared-components_src_lib_status-li&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_react_angular-bridge_src_lib_injector_Injector_tsx-node_modules_pnpm_react-dom_1-6ccc95.6ff3bfa9bbe4bb.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>bugs</evidence>
									<otherinfo>The following pattern was used: \bBUGS\b and was detected in the element starting with: &quot;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_react_angular-bridge_src_lib_injector_Injector_tsx-no&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_react_angular-bridge_src_lib_injector_Injector_tsx-node_modules_pnpm_react-dom_1-6ccc95.6ff3bfa9bbe4bb.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>From</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected in the element starting with: &quot;    # From CommandAppFeature&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_react_angular-bridge_src_lib_injector_Injector_tsx-node_modules_pnpm_react-dom_1-6ccc95.6ff3bfa9bbe4bb.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected 2 times, the first in the element starting with: &quot;  query UserPageLayoutQuery {&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_react_angular-bridge_src_lib_injector_Injector_tsx-node_modules_pnpm_react-dom_1-6ccc95.6ff3bfa9bbe4bb.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>USER</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 3 times, the first in the element starting with: &quot;    canConnectForUser: canConnect(tenantKind: USER)&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_react_angular-bridge_src_lib_injector_Injector_tsx-node_modules_pnpm_react-dom_1-6ccc95.6ff3bfa9bbe4bb.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>username</evidence>
									<otherinfo>The following pattern was used: \bUSERNAME\b and was detected in the element starting with: &quot;    username&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_sharing_shared-components_src_lib_permission-options-dropdown_permission-options-5f490a.832768d50b1ac8.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>ADMIN</evidence>
									<otherinfo>The following pattern was used: \bADMIN\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_sharing_shared-components_src_lib_permis&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-libs_views_lock_src_index_ts.264bd54f655c6b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 2 times, the first in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-libs_views_lock_src_index_ts&quot;],{57336:(Q,g,r)&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_apollo_react-common_3_1_4__types_react_18_0_25_apollo-client_2_6_10-98f1a0.904bb8eac00d34.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in the element starting with: &quot;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-node_modules_pnpm_apollo_react-common_3_1_4__types_react_1&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_formatjs_ecma402-abstract_1_9_8_node_modules_formatjs_ecma402-abstr-6ec257.4584bae9d216a3.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-node_modules_pnpm_formatjs_ecma402-abstract_1&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_formatjs_intl-displaynames_5_2_3_node_modules_formatjs_intl-display-54e27a.1e29a92312ba9e.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>bug</evidence>
									<otherinfo>The following pattern was used: \bBUG\b and was detected in the element starting with: &quot;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-node_modules_pnpm_formatjs_intl-displaynames_5_2_3_node_mo&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_fortawesome_free-solid-svg-icons_5_15_3_node_modules_fortawesome_fr-4a5c5a.25db63a0a11dd2.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>bug</evidence>
									<otherinfo>The following pattern was used: \bBUG\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-node_modules_pnpm_fortawesome_free-solid-svg-&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/default-node_modules_pnpm_symbol-observable_1_2_0_node_modules_symbol-observable_es_index_js--67bcf3.cdd7c95eb4c1b2.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;default-node_modules_pnpm_symbol-observable_1_2_0_nod&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/libs_auth_session-timeout_src_lib_services_idle-timeout_idle-timeout_service_ts.57fb21da315640.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>admin</evidence>
									<otherinfo>The following pattern was used: \bADMIN\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;libs_auth_session-timeout_src_lib_services_idle-timeo&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/libs_localization_utils_src_lib_ecodes_index_ts.30f966a1fdb0a1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;libs_localization_utils_src_lib_ecodes_index_ts&quot;],{66&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/libs_toast_src_lib_index_ts.250ac8fbfec9c1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;libs_toast_src_lib_index_ts&quot;],{606898:(j,O,a)=&gt;{a.d(O&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/polyfills.c620a95d87d8d0.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;polyfills&quot;],{887177:(a,c)=&gt;{&quot;use strict&quot;;Object.defineProperty(c,&quot;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/react-app.b38737d7309e5d.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;react-app&quot;],{311425:(K,O,e)=&gt;{e.r(O),e.d(O,{App:()=&gt;u&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/runtime.19589abbdb50b2.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>admin</evidence>
									<otherinfo>The following pattern was used: \bADMIN\b and was detected in the element starting with: &quot;(()=&gt;{&quot;use strict&quot;;var _,p={},u={};function e(_){var o=u[_];if(void 0!==o)return o.exports;var s=u[_]={id:_,loaded:!1,exports:{}&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://app-cdn.clickup.com/scripts.b9ce81de51a331.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;function areCookiesEnabled(){try{if(window.self!==window.top)return!0}catch{return!0}try{document.cookie=&quot;cookietest=1&quot;;var l=-1&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>30</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&quot;use strict&quot;;(self.webpackChunkclient=self.webpackChunkclient||[]).push([[&quot;apps_client_src_app_loader_loader_component_ts&quot;],{912&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>85</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://app.clickup.com" host="app.clickup.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-4</alertRef>
						<alert>CSP: Wildcard Directive</alert>
						<name>CSP: Wildcard Directive</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://app.clickup.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>default-src &apos;self&apos; https://app-cdn.clickup.com; script-src &apos;self&apos; blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://maps.googleapis.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.com https://*.wistia.net https://src.litix.io https://zapier.com https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://*.clarity.ms https://www.googletagmanager.com https://www.googleadservices.com https://www.google-analytics.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://core.thepointyspritesclub.com https://m.servedby-buysellads.com https://canny.io https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk.minervaknows.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://app.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com &apos;sha256-4F3AlVDfHOAh+oYhZPs3EVMNLNadjO8On0Dw7KGh/0k=&apos; &apos;sha256-HlaGGq5nhTgcEEAWmEiWF8Bdf6qDczq6wsXFnlEg7Tg=&apos; https://cdn.pdst.fm &apos;sha256-j2ps3etSlArdF3rx5RB3P1LHnZ5QaPvxPl1kLybUU1I=&apos; todesktop-internal: https://code.highcharts.com &apos;unsafe-hashes&apos; &apos;sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU=&apos; &apos;sha256-46mc3H6z56gnOReRHr//8M7FxjqtSaDN7KetqqduuiE=&apos; &apos;sha256-lo7ZdP6kFds+wf1WMWvn7MhcFVFJV44kAXODRevzRZ8=&apos; &apos;sha256-kjwZ9XFHUXkRgP39E+c2Nq0vJmP8LXFE0uBk6CONyps=&apos; &apos;sha256-lYEr2zHO9mOSeyRaGwAV3ONrKh8W0bkmiI1dNP3XPw8=&apos; &apos;sha256-LMJv8ESlfiCF+9pWKUez+VXyvZdYrT+fcQ3Eps4XPyQ=&apos; &apos;sha256-O9aq+7SwZvvc0fhedjnYucjU23ErSZyDH2NlMpTcIrg=&apos; &apos;sha256-crv0swrwxjIlHW1jNIPi6B6rE2DSmtsXQFN5PQKnM28=&apos; &apos;sha256-18PfGZ5/htE/jRivbwelUdaz5nHCggm6Z4DwoAxuuuQ=&apos; &apos;sha256-ZdDTEfl8xrGn7iZ/2mMDizDIe6JRmep2vz9STHJi4Zs=&apos; &apos;sha256-XmUonDD4SHX/8KL3j/86z0J1usvsHZ1xoxcYIkK9ofY=&apos; &apos;sha256-TMQYQm5DIUPhkboCV7JZ+UNcKeh2iHk2kDZ+GzVnZyM=&apos; &apos;sha256-rv9RoPCujGN0BWUcqLIueZC4J98NAoFBaa2VQHSBLUA=&apos; &apos;sha256-MhQnurjVkR0d3jTJlT4vDS8W1Ul2ufyOI9GbZmyONCc=&apos; &apos;sha256-fkL1dWflM/Pp1A6PqNJzVUuQZHXkpviRNjFFgUWDc0o=&apos; &apos;sha256-JrwHtCkAMCxphN8OUZ/8B2IOHBF0GxYQVm/u8lnHk5U=&apos; &apos;sha256-aPtbM89KJ2QtT9b3cTayhhL6B9UAtlXVAIrISmkAqlo=&apos; &apos;sha256-dplqP925cq1wFUU0QEM3ErDaKHbkInjAYRqinz3ckA4=&apos; &apos;sha256-+WyYVdw/xyJMSon2S4rJiuvQwzfxnaOVyO9fBWnBdfI=&apos; &apos;sha256-d53GrCUkhYjY5Gg+lvPu4EvwVHF469YN3xDuBKJ1zlw=&apos; &apos;sha256-6YVBj8Dp8/hmBCVa1GkZq10MnLp4jxNZ7DlQg/1e9do=&apos; &apos;sha256-c46qGWZpjsaDTejjs2vXcwKULa5GqfWHy6NpfRj7RLo=&apos; &apos;sha256-NAVhSZ+FJwaLOVUVF5pNJJHxUVkbWK5v3gCC+rhwqUE=&apos; &apos;sha256-9/0hd96qoXdEcT1/9WrK3RBCF0b9iAcQILT7kCdqymI=&apos; &apos;sha256-8NDdvKWDYv66kjW9fgz/ZKScITpkp4dbsM+TA/O04RM=&apos; &apos;sha256-d9X+lt79bIweOwRmtIJ8+D3H5ccnoQF34RXSUTL6hvY=&apos; &apos;sha256-tfwk6Z/5gbYQErJTx0xXYv88nf2sOTB9ziGzTRM780I=&apos; &apos;sha256-r0zKdIaVXL5La22Qv6w3BFOUx0ZioSsqoP8AOEdGty0=&apos; &apos;sha256-4Hq8ngOaih5AFi/QwY8sfU4scUQ7UWGxcITuIl1h45Y=&apos; &apos;sha256-G574QxiyzjYg5WRPE1EIV7ybIvR8RSwSodlLw3OSsSo=&apos; &apos;sha256-62dGtgZECu/Vf7xGnq6kk2x9UEFtACjjvxdPXV22Y1I=&apos; &apos;sha256-A1G2PMl7phK8KZzsPIbRZuxaapDp859I6mcj40iW1Vo=&apos; &apos;sha256-J3lp2ucUq+OQgBYI0rDj0IUEuz0buuDTaQjYGjNVQgU=&apos; &apos;sha256-HsDuP/JOW1/mYiKGwTIYa1MLC/2ccZaJNF8oxxGPr+I=&apos; https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://*.walkme.com https://cdn.segment.com https://*.taboola.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com https://*.ada.support https://app-cdn.clickup.com; style-src &apos;self&apos; &apos;unsafe-inline&apos; https://cdn1.codox.io https://cdn.zapier.com https://app.pendo.io https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://content.webproduct.clickup.com blob: https://fast.wistia.com https://fonts.googleapis.com https://*.walkme.com https://*.servicebell.com https://app-cdn.clickup.com; img-src &apos;self&apos; data: https: http: https://www.google.com https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google-analytics.com https://www.google.co.uk https://www.googletagmanager.com https://core.thepointyspritesclub.com https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://*.clarity.ms https://insight.adsrvr.org blob: https://*.servicebell.com https://www.facebook.com https://zapier-images.imgix.net https://zapier.com https://cdn.pendo.io https://app.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://data.webproduct.clickup.com https://content.webproduct.clickup.com https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://maps.googleapis.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://*.walkme.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; font-src &apos;self&apos; data: https://*.servicebell.com https://*.wistia.com https://fonts.gstatic.com https://fonts.googleapis.com https://*.walkme.com https://app-cdn.clickup.com; form-action &apos;self&apos; https: https://canny.io https://connect.facebook.net; media-src &apos;self&apos; https://*.servicebell.com https://*.getservicebell.com blob: data: https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; connect-src &apos;self&apos; https://api.exchangeratesapi.io https://maps.googleapis.com https://*.clarity.ms https://sdk.split.io https://events.split.io wss://proxy.clickup.codox.io wss://sm-dsm.stage.codox.io https://alb.clickup.codox.io https://sentry.io https://*.servicebell.com wss://api.servicebell.com https://browser-http-intake.logs.datadoghq.com https://*.browser-intake-datadoghq.com https://payments.sandbox.braintree-api.com https://origin-analytics-sand.sandbox.braintree-api.com https://api.allorigins.win https://www.google-analytics.com https://core.thepointyspritesclub.com https://stats.g.doubleclick.net https://canny.io https://www.facebook.com https://sdk.minervaknows.com https://api.minervaknows.com https://api.zapier.com https://zapier.com https://x.clearbit.com https://app.pendo.io https://data.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://us-central1-adaptive-growth.cloudfunctions.net https://api.giphy.com https://*.litix.io https://*.wistia.com https://embedwistia-a.akamaihd.net https://*.walkme.com wss://search.clickup-qa.com wss://search.clickup-staging.com wss://search.clickup-prod.com wss://search.clickup-eu.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com http://localhost:23435 http://localhost:39214 http://127.0.0.1:23435 http://127.0.0.1:39214 https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://invoices.clickup.com https://export.clickup.com https://gantt-export-prod.clickup.com wss://*.clickup.com wss://cu-prod-or-coeditor.clickup.com wss://ws.clickup.com wss://na001-ws.clickup.com wss://eu001-ws.clickup.com wss://ap001-ws.clickup.com wss://sa001-ws.clickup.com https://attch.clickup.com https://form-submit.clickup.com blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.net https://src.litix.io https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://www.googletagmanager.com https://www.googleadservices.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://m.servedby-buysellads.com https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com https://cdn.pdst.fm todesktop-internal: https://code.highcharts.com https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://cdn.segment.com https://*.taboola.com https://*.ada.support https://app-cdn.clickup.com https://fast.wistia.com https://fonts.googleapis.com https: https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google.co.uk https://insight.adsrvr.org https://zapier-images.imgix.net https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://fonts.gstatic.com https://*.getservicebell.com; child-src &apos;self&apos; blob: https://www.youtube.com https://player.vimeo.com https://fast.wistia.net https://www.facebook.com https://staticxx.facebook.com https://sdk-services.minervaknows.com https://*.walkme.com; frame-src https:; manifest-src &apos;self&apos; https://app-cdn.clickup.com; object-src &apos;none&apos;; report-uri /v1/csp/report-violation; frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: 
img-src, connect-src, frame-src, form-action

The directive(s): form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: &lt;/p&gt;&lt;p&gt;img-src, connect-src, frame-src, form-action&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The directive(s): form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-7</alertRef>
						<alert>CSP: script-src unsafe-hashes</alert>
						<name>CSP: script-src unsafe-hashes</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://app.clickup.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>default-src &apos;self&apos; https://app-cdn.clickup.com; script-src &apos;self&apos; blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://maps.googleapis.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.com https://*.wistia.net https://src.litix.io https://zapier.com https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://*.clarity.ms https://www.googletagmanager.com https://www.googleadservices.com https://www.google-analytics.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://core.thepointyspritesclub.com https://m.servedby-buysellads.com https://canny.io https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk.minervaknows.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://app.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com &apos;sha256-4F3AlVDfHOAh+oYhZPs3EVMNLNadjO8On0Dw7KGh/0k=&apos; &apos;sha256-HlaGGq5nhTgcEEAWmEiWF8Bdf6qDczq6wsXFnlEg7Tg=&apos; https://cdn.pdst.fm &apos;sha256-j2ps3etSlArdF3rx5RB3P1LHnZ5QaPvxPl1kLybUU1I=&apos; todesktop-internal: https://code.highcharts.com &apos;unsafe-hashes&apos; &apos;sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU=&apos; &apos;sha256-46mc3H6z56gnOReRHr//8M7FxjqtSaDN7KetqqduuiE=&apos; &apos;sha256-lo7ZdP6kFds+wf1WMWvn7MhcFVFJV44kAXODRevzRZ8=&apos; &apos;sha256-kjwZ9XFHUXkRgP39E+c2Nq0vJmP8LXFE0uBk6CONyps=&apos; &apos;sha256-lYEr2zHO9mOSeyRaGwAV3ONrKh8W0bkmiI1dNP3XPw8=&apos; &apos;sha256-LMJv8ESlfiCF+9pWKUez+VXyvZdYrT+fcQ3Eps4XPyQ=&apos; &apos;sha256-O9aq+7SwZvvc0fhedjnYucjU23ErSZyDH2NlMpTcIrg=&apos; &apos;sha256-crv0swrwxjIlHW1jNIPi6B6rE2DSmtsXQFN5PQKnM28=&apos; &apos;sha256-18PfGZ5/htE/jRivbwelUdaz5nHCggm6Z4DwoAxuuuQ=&apos; &apos;sha256-ZdDTEfl8xrGn7iZ/2mMDizDIe6JRmep2vz9STHJi4Zs=&apos; &apos;sha256-XmUonDD4SHX/8KL3j/86z0J1usvsHZ1xoxcYIkK9ofY=&apos; &apos;sha256-TMQYQm5DIUPhkboCV7JZ+UNcKeh2iHk2kDZ+GzVnZyM=&apos; &apos;sha256-rv9RoPCujGN0BWUcqLIueZC4J98NAoFBaa2VQHSBLUA=&apos; &apos;sha256-MhQnurjVkR0d3jTJlT4vDS8W1Ul2ufyOI9GbZmyONCc=&apos; &apos;sha256-fkL1dWflM/Pp1A6PqNJzVUuQZHXkpviRNjFFgUWDc0o=&apos; &apos;sha256-JrwHtCkAMCxphN8OUZ/8B2IOHBF0GxYQVm/u8lnHk5U=&apos; &apos;sha256-aPtbM89KJ2QtT9b3cTayhhL6B9UAtlXVAIrISmkAqlo=&apos; &apos;sha256-dplqP925cq1wFUU0QEM3ErDaKHbkInjAYRqinz3ckA4=&apos; &apos;sha256-+WyYVdw/xyJMSon2S4rJiuvQwzfxnaOVyO9fBWnBdfI=&apos; &apos;sha256-d53GrCUkhYjY5Gg+lvPu4EvwVHF469YN3xDuBKJ1zlw=&apos; &apos;sha256-6YVBj8Dp8/hmBCVa1GkZq10MnLp4jxNZ7DlQg/1e9do=&apos; &apos;sha256-c46qGWZpjsaDTejjs2vXcwKULa5GqfWHy6NpfRj7RLo=&apos; &apos;sha256-NAVhSZ+FJwaLOVUVF5pNJJHxUVkbWK5v3gCC+rhwqUE=&apos; &apos;sha256-9/0hd96qoXdEcT1/9WrK3RBCF0b9iAcQILT7kCdqymI=&apos; &apos;sha256-8NDdvKWDYv66kjW9fgz/ZKScITpkp4dbsM+TA/O04RM=&apos; &apos;sha256-d9X+lt79bIweOwRmtIJ8+D3H5ccnoQF34RXSUTL6hvY=&apos; &apos;sha256-tfwk6Z/5gbYQErJTx0xXYv88nf2sOTB9ziGzTRM780I=&apos; &apos;sha256-r0zKdIaVXL5La22Qv6w3BFOUx0ZioSsqoP8AOEdGty0=&apos; &apos;sha256-4Hq8ngOaih5AFi/QwY8sfU4scUQ7UWGxcITuIl1h45Y=&apos; &apos;sha256-G574QxiyzjYg5WRPE1EIV7ybIvR8RSwSodlLw3OSsSo=&apos; &apos;sha256-62dGtgZECu/Vf7xGnq6kk2x9UEFtACjjvxdPXV22Y1I=&apos; &apos;sha256-A1G2PMl7phK8KZzsPIbRZuxaapDp859I6mcj40iW1Vo=&apos; &apos;sha256-J3lp2ucUq+OQgBYI0rDj0IUEuz0buuDTaQjYGjNVQgU=&apos; &apos;sha256-HsDuP/JOW1/mYiKGwTIYa1MLC/2ccZaJNF8oxxGPr+I=&apos; https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://*.walkme.com https://cdn.segment.com https://*.taboola.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com https://*.ada.support https://app-cdn.clickup.com; style-src &apos;self&apos; &apos;unsafe-inline&apos; https://cdn1.codox.io https://cdn.zapier.com https://app.pendo.io https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://content.webproduct.clickup.com blob: https://fast.wistia.com https://fonts.googleapis.com https://*.walkme.com https://*.servicebell.com https://app-cdn.clickup.com; img-src &apos;self&apos; data: https: http: https://www.google.com https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google-analytics.com https://www.google.co.uk https://www.googletagmanager.com https://core.thepointyspritesclub.com https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://*.clarity.ms https://insight.adsrvr.org blob: https://*.servicebell.com https://www.facebook.com https://zapier-images.imgix.net https://zapier.com https://cdn.pendo.io https://app.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://data.webproduct.clickup.com https://content.webproduct.clickup.com https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://maps.googleapis.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://*.walkme.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; font-src &apos;self&apos; data: https://*.servicebell.com https://*.wistia.com https://fonts.gstatic.com https://fonts.googleapis.com https://*.walkme.com https://app-cdn.clickup.com; form-action &apos;self&apos; https: https://canny.io https://connect.facebook.net; media-src &apos;self&apos; https://*.servicebell.com https://*.getservicebell.com blob: data: https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; connect-src &apos;self&apos; https://api.exchangeratesapi.io https://maps.googleapis.com https://*.clarity.ms https://sdk.split.io https://events.split.io wss://proxy.clickup.codox.io wss://sm-dsm.stage.codox.io https://alb.clickup.codox.io https://sentry.io https://*.servicebell.com wss://api.servicebell.com https://browser-http-intake.logs.datadoghq.com https://*.browser-intake-datadoghq.com https://payments.sandbox.braintree-api.com https://origin-analytics-sand.sandbox.braintree-api.com https://api.allorigins.win https://www.google-analytics.com https://core.thepointyspritesclub.com https://stats.g.doubleclick.net https://canny.io https://www.facebook.com https://sdk.minervaknows.com https://api.minervaknows.com https://api.zapier.com https://zapier.com https://x.clearbit.com https://app.pendo.io https://data.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://us-central1-adaptive-growth.cloudfunctions.net https://api.giphy.com https://*.litix.io https://*.wistia.com https://embedwistia-a.akamaihd.net https://*.walkme.com wss://search.clickup-qa.com wss://search.clickup-staging.com wss://search.clickup-prod.com wss://search.clickup-eu.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com http://localhost:23435 http://localhost:39214 http://127.0.0.1:23435 http://127.0.0.1:39214 https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://invoices.clickup.com https://export.clickup.com https://gantt-export-prod.clickup.com wss://*.clickup.com wss://cu-prod-or-coeditor.clickup.com wss://ws.clickup.com wss://na001-ws.clickup.com wss://eu001-ws.clickup.com wss://ap001-ws.clickup.com wss://sa001-ws.clickup.com https://attch.clickup.com https://form-submit.clickup.com blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.net https://src.litix.io https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://www.googletagmanager.com https://www.googleadservices.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://m.servedby-buysellads.com https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com https://cdn.pdst.fm todesktop-internal: https://code.highcharts.com https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://cdn.segment.com https://*.taboola.com https://*.ada.support https://app-cdn.clickup.com https://fast.wistia.com https://fonts.googleapis.com https: https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google.co.uk https://insight.adsrvr.org https://zapier-images.imgix.net https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://fonts.gstatic.com https://*.getservicebell.com; child-src &apos;self&apos; blob: https://www.youtube.com https://player.vimeo.com https://fast.wistia.net https://www.facebook.com https://staticxx.facebook.com https://sdk-services.minervaknows.com https://*.walkme.com; frame-src https:; manifest-src &apos;self&apos; https://app-cdn.clickup.com; object-src &apos;none&apos;; report-uri /v1/csp/report-violation; frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-hashes, an attacker will be able to use any of the code covered by such hashes.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;script-src includes unsafe-hashes, an attacker will be able to use any of the code covered by such hashes.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP3/#unsafe-hashes-usage&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/examples/allow-inline-script/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-6</alertRef>
						<alert>CSP: style-src unsafe-inline</alert>
						<name>CSP: style-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://app.clickup.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>default-src &apos;self&apos; https://app-cdn.clickup.com; script-src &apos;self&apos; blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://maps.googleapis.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.com https://*.wistia.net https://src.litix.io https://zapier.com https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://*.clarity.ms https://www.googletagmanager.com https://www.googleadservices.com https://www.google-analytics.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://core.thepointyspritesclub.com https://m.servedby-buysellads.com https://canny.io https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk.minervaknows.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://app.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com &apos;sha256-4F3AlVDfHOAh+oYhZPs3EVMNLNadjO8On0Dw7KGh/0k=&apos; &apos;sha256-HlaGGq5nhTgcEEAWmEiWF8Bdf6qDczq6wsXFnlEg7Tg=&apos; https://cdn.pdst.fm &apos;sha256-j2ps3etSlArdF3rx5RB3P1LHnZ5QaPvxPl1kLybUU1I=&apos; todesktop-internal: https://code.highcharts.com &apos;unsafe-hashes&apos; &apos;sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU=&apos; &apos;sha256-46mc3H6z56gnOReRHr//8M7FxjqtSaDN7KetqqduuiE=&apos; &apos;sha256-lo7ZdP6kFds+wf1WMWvn7MhcFVFJV44kAXODRevzRZ8=&apos; &apos;sha256-kjwZ9XFHUXkRgP39E+c2Nq0vJmP8LXFE0uBk6CONyps=&apos; &apos;sha256-lYEr2zHO9mOSeyRaGwAV3ONrKh8W0bkmiI1dNP3XPw8=&apos; &apos;sha256-LMJv8ESlfiCF+9pWKUez+VXyvZdYrT+fcQ3Eps4XPyQ=&apos; &apos;sha256-O9aq+7SwZvvc0fhedjnYucjU23ErSZyDH2NlMpTcIrg=&apos; &apos;sha256-crv0swrwxjIlHW1jNIPi6B6rE2DSmtsXQFN5PQKnM28=&apos; &apos;sha256-18PfGZ5/htE/jRivbwelUdaz5nHCggm6Z4DwoAxuuuQ=&apos; &apos;sha256-ZdDTEfl8xrGn7iZ/2mMDizDIe6JRmep2vz9STHJi4Zs=&apos; &apos;sha256-XmUonDD4SHX/8KL3j/86z0J1usvsHZ1xoxcYIkK9ofY=&apos; &apos;sha256-TMQYQm5DIUPhkboCV7JZ+UNcKeh2iHk2kDZ+GzVnZyM=&apos; &apos;sha256-rv9RoPCujGN0BWUcqLIueZC4J98NAoFBaa2VQHSBLUA=&apos; &apos;sha256-MhQnurjVkR0d3jTJlT4vDS8W1Ul2ufyOI9GbZmyONCc=&apos; &apos;sha256-fkL1dWflM/Pp1A6PqNJzVUuQZHXkpviRNjFFgUWDc0o=&apos; &apos;sha256-JrwHtCkAMCxphN8OUZ/8B2IOHBF0GxYQVm/u8lnHk5U=&apos; &apos;sha256-aPtbM89KJ2QtT9b3cTayhhL6B9UAtlXVAIrISmkAqlo=&apos; &apos;sha256-dplqP925cq1wFUU0QEM3ErDaKHbkInjAYRqinz3ckA4=&apos; &apos;sha256-+WyYVdw/xyJMSon2S4rJiuvQwzfxnaOVyO9fBWnBdfI=&apos; &apos;sha256-d53GrCUkhYjY5Gg+lvPu4EvwVHF469YN3xDuBKJ1zlw=&apos; &apos;sha256-6YVBj8Dp8/hmBCVa1GkZq10MnLp4jxNZ7DlQg/1e9do=&apos; &apos;sha256-c46qGWZpjsaDTejjs2vXcwKULa5GqfWHy6NpfRj7RLo=&apos; &apos;sha256-NAVhSZ+FJwaLOVUVF5pNJJHxUVkbWK5v3gCC+rhwqUE=&apos; &apos;sha256-9/0hd96qoXdEcT1/9WrK3RBCF0b9iAcQILT7kCdqymI=&apos; &apos;sha256-8NDdvKWDYv66kjW9fgz/ZKScITpkp4dbsM+TA/O04RM=&apos; &apos;sha256-d9X+lt79bIweOwRmtIJ8+D3H5ccnoQF34RXSUTL6hvY=&apos; &apos;sha256-tfwk6Z/5gbYQErJTx0xXYv88nf2sOTB9ziGzTRM780I=&apos; &apos;sha256-r0zKdIaVXL5La22Qv6w3BFOUx0ZioSsqoP8AOEdGty0=&apos; &apos;sha256-4Hq8ngOaih5AFi/QwY8sfU4scUQ7UWGxcITuIl1h45Y=&apos; &apos;sha256-G574QxiyzjYg5WRPE1EIV7ybIvR8RSwSodlLw3OSsSo=&apos; &apos;sha256-62dGtgZECu/Vf7xGnq6kk2x9UEFtACjjvxdPXV22Y1I=&apos; &apos;sha256-A1G2PMl7phK8KZzsPIbRZuxaapDp859I6mcj40iW1Vo=&apos; &apos;sha256-J3lp2ucUq+OQgBYI0rDj0IUEuz0buuDTaQjYGjNVQgU=&apos; &apos;sha256-HsDuP/JOW1/mYiKGwTIYa1MLC/2ccZaJNF8oxxGPr+I=&apos; https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://*.walkme.com https://cdn.segment.com https://*.taboola.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com https://*.ada.support https://app-cdn.clickup.com; style-src &apos;self&apos; &apos;unsafe-inline&apos; https://cdn1.codox.io https://cdn.zapier.com https://app.pendo.io https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://content.webproduct.clickup.com blob: https://fast.wistia.com https://fonts.googleapis.com https://*.walkme.com https://*.servicebell.com https://app-cdn.clickup.com; img-src &apos;self&apos; data: https: http: https://www.google.com https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google-analytics.com https://www.google.co.uk https://www.googletagmanager.com https://core.thepointyspritesclub.com https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://*.clarity.ms https://insight.adsrvr.org blob: https://*.servicebell.com https://www.facebook.com https://zapier-images.imgix.net https://zapier.com https://cdn.pendo.io https://app.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://data.webproduct.clickup.com https://content.webproduct.clickup.com https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://maps.googleapis.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://*.walkme.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; font-src &apos;self&apos; data: https://*.servicebell.com https://*.wistia.com https://fonts.gstatic.com https://fonts.googleapis.com https://*.walkme.com https://app-cdn.clickup.com; form-action &apos;self&apos; https: https://canny.io https://connect.facebook.net; media-src &apos;self&apos; https://*.servicebell.com https://*.getservicebell.com blob: data: https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; connect-src &apos;self&apos; https://api.exchangeratesapi.io https://maps.googleapis.com https://*.clarity.ms https://sdk.split.io https://events.split.io wss://proxy.clickup.codox.io wss://sm-dsm.stage.codox.io https://alb.clickup.codox.io https://sentry.io https://*.servicebell.com wss://api.servicebell.com https://browser-http-intake.logs.datadoghq.com https://*.browser-intake-datadoghq.com https://payments.sandbox.braintree-api.com https://origin-analytics-sand.sandbox.braintree-api.com https://api.allorigins.win https://www.google-analytics.com https://core.thepointyspritesclub.com https://stats.g.doubleclick.net https://canny.io https://www.facebook.com https://sdk.minervaknows.com https://api.minervaknows.com https://api.zapier.com https://zapier.com https://x.clearbit.com https://app.pendo.io https://data.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://us-central1-adaptive-growth.cloudfunctions.net https://api.giphy.com https://*.litix.io https://*.wistia.com https://embedwistia-a.akamaihd.net https://*.walkme.com wss://search.clickup-qa.com wss://search.clickup-staging.com wss://search.clickup-prod.com wss://search.clickup-eu.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com http://localhost:23435 http://localhost:39214 http://127.0.0.1:23435 http://127.0.0.1:39214 https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://invoices.clickup.com https://export.clickup.com https://gantt-export-prod.clickup.com wss://*.clickup.com wss://cu-prod-or-coeditor.clickup.com wss://ws.clickup.com wss://na001-ws.clickup.com wss://eu001-ws.clickup.com wss://ap001-ws.clickup.com wss://sa001-ws.clickup.com https://attch.clickup.com https://form-submit.clickup.com blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.net https://src.litix.io https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://www.googletagmanager.com https://www.googleadservices.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://m.servedby-buysellads.com https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com https://cdn.pdst.fm todesktop-internal: https://code.highcharts.com https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://cdn.segment.com https://*.taboola.com https://*.ada.support https://app-cdn.clickup.com https://fast.wistia.com https://fonts.googleapis.com https: https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google.co.uk https://insight.adsrvr.org https://zapier-images.imgix.net https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://fonts.gstatic.com https://*.getservicebell.com; child-src &apos;self&apos; blob: https://www.youtube.com https://player.vimeo.com https://fast.wistia.net https://www.facebook.com https://staticxx.facebook.com https://sdk-services.minervaknows.com https://*.walkme.com; frame-src https:; manifest-src &apos;self&apos; https://app-cdn.clickup.com; object-src &apos;none&apos;; report-uri /v1/csp/report-violation; frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-3</alertRef>
						<alert>CSP: Notices</alert>
						<name>CSP: Notices</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://app.clickup.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>default-src &apos;self&apos; https://app-cdn.clickup.com; script-src &apos;self&apos; blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://maps.googleapis.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.com https://*.wistia.net https://src.litix.io https://zapier.com https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://*.clarity.ms https://www.googletagmanager.com https://www.googleadservices.com https://www.google-analytics.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://core.thepointyspritesclub.com https://m.servedby-buysellads.com https://canny.io https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk.minervaknows.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://app.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com &apos;sha256-4F3AlVDfHOAh+oYhZPs3EVMNLNadjO8On0Dw7KGh/0k=&apos; &apos;sha256-HlaGGq5nhTgcEEAWmEiWF8Bdf6qDczq6wsXFnlEg7Tg=&apos; https://cdn.pdst.fm &apos;sha256-j2ps3etSlArdF3rx5RB3P1LHnZ5QaPvxPl1kLybUU1I=&apos; todesktop-internal: https://code.highcharts.com &apos;unsafe-hashes&apos; &apos;sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU=&apos; &apos;sha256-46mc3H6z56gnOReRHr//8M7FxjqtSaDN7KetqqduuiE=&apos; &apos;sha256-lo7ZdP6kFds+wf1WMWvn7MhcFVFJV44kAXODRevzRZ8=&apos; &apos;sha256-kjwZ9XFHUXkRgP39E+c2Nq0vJmP8LXFE0uBk6CONyps=&apos; &apos;sha256-lYEr2zHO9mOSeyRaGwAV3ONrKh8W0bkmiI1dNP3XPw8=&apos; &apos;sha256-LMJv8ESlfiCF+9pWKUez+VXyvZdYrT+fcQ3Eps4XPyQ=&apos; &apos;sha256-O9aq+7SwZvvc0fhedjnYucjU23ErSZyDH2NlMpTcIrg=&apos; &apos;sha256-crv0swrwxjIlHW1jNIPi6B6rE2DSmtsXQFN5PQKnM28=&apos; &apos;sha256-18PfGZ5/htE/jRivbwelUdaz5nHCggm6Z4DwoAxuuuQ=&apos; &apos;sha256-ZdDTEfl8xrGn7iZ/2mMDizDIe6JRmep2vz9STHJi4Zs=&apos; &apos;sha256-XmUonDD4SHX/8KL3j/86z0J1usvsHZ1xoxcYIkK9ofY=&apos; &apos;sha256-TMQYQm5DIUPhkboCV7JZ+UNcKeh2iHk2kDZ+GzVnZyM=&apos; &apos;sha256-rv9RoPCujGN0BWUcqLIueZC4J98NAoFBaa2VQHSBLUA=&apos; &apos;sha256-MhQnurjVkR0d3jTJlT4vDS8W1Ul2ufyOI9GbZmyONCc=&apos; &apos;sha256-fkL1dWflM/Pp1A6PqNJzVUuQZHXkpviRNjFFgUWDc0o=&apos; &apos;sha256-JrwHtCkAMCxphN8OUZ/8B2IOHBF0GxYQVm/u8lnHk5U=&apos; &apos;sha256-aPtbM89KJ2QtT9b3cTayhhL6B9UAtlXVAIrISmkAqlo=&apos; &apos;sha256-dplqP925cq1wFUU0QEM3ErDaKHbkInjAYRqinz3ckA4=&apos; &apos;sha256-+WyYVdw/xyJMSon2S4rJiuvQwzfxnaOVyO9fBWnBdfI=&apos; &apos;sha256-d53GrCUkhYjY5Gg+lvPu4EvwVHF469YN3xDuBKJ1zlw=&apos; &apos;sha256-6YVBj8Dp8/hmBCVa1GkZq10MnLp4jxNZ7DlQg/1e9do=&apos; &apos;sha256-c46qGWZpjsaDTejjs2vXcwKULa5GqfWHy6NpfRj7RLo=&apos; &apos;sha256-NAVhSZ+FJwaLOVUVF5pNJJHxUVkbWK5v3gCC+rhwqUE=&apos; &apos;sha256-9/0hd96qoXdEcT1/9WrK3RBCF0b9iAcQILT7kCdqymI=&apos; &apos;sha256-8NDdvKWDYv66kjW9fgz/ZKScITpkp4dbsM+TA/O04RM=&apos; &apos;sha256-d9X+lt79bIweOwRmtIJ8+D3H5ccnoQF34RXSUTL6hvY=&apos; &apos;sha256-tfwk6Z/5gbYQErJTx0xXYv88nf2sOTB9ziGzTRM780I=&apos; &apos;sha256-r0zKdIaVXL5La22Qv6w3BFOUx0ZioSsqoP8AOEdGty0=&apos; &apos;sha256-4Hq8ngOaih5AFi/QwY8sfU4scUQ7UWGxcITuIl1h45Y=&apos; &apos;sha256-G574QxiyzjYg5WRPE1EIV7ybIvR8RSwSodlLw3OSsSo=&apos; &apos;sha256-62dGtgZECu/Vf7xGnq6kk2x9UEFtACjjvxdPXV22Y1I=&apos; &apos;sha256-A1G2PMl7phK8KZzsPIbRZuxaapDp859I6mcj40iW1Vo=&apos; &apos;sha256-J3lp2ucUq+OQgBYI0rDj0IUEuz0buuDTaQjYGjNVQgU=&apos; &apos;sha256-HsDuP/JOW1/mYiKGwTIYa1MLC/2ccZaJNF8oxxGPr+I=&apos; https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://*.walkme.com https://cdn.segment.com https://*.taboola.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com https://*.ada.support https://app-cdn.clickup.com; style-src &apos;self&apos; &apos;unsafe-inline&apos; https://cdn1.codox.io https://cdn.zapier.com https://app.pendo.io https://cdn.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://content.webproduct.clickup.com blob: https://fast.wistia.com https://fonts.googleapis.com https://*.walkme.com https://*.servicebell.com https://app-cdn.clickup.com; img-src &apos;self&apos; data: https: http: https://www.google.com https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google-analytics.com https://www.google.co.uk https://www.googletagmanager.com https://core.thepointyspritesclub.com https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://*.clarity.ms https://insight.adsrvr.org blob: https://*.servicebell.com https://www.facebook.com https://zapier-images.imgix.net https://zapier.com https://cdn.pendo.io https://app.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://data.pendo.io https://data.webproduct.clickup.com https://content.webproduct.clickup.com https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://maps.googleapis.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://*.walkme.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; font-src &apos;self&apos; data: https://*.servicebell.com https://*.wistia.com https://fonts.gstatic.com https://fonts.googleapis.com https://*.walkme.com https://app-cdn.clickup.com; form-action &apos;self&apos; https: https://canny.io https://connect.facebook.net; media-src &apos;self&apos; https://*.servicebell.com https://*.getservicebell.com blob: data: https://*.wistia.com https://*.wistia.net https://embedwistia-a.akamaihd.net https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://app-cdn.clickup.com; connect-src &apos;self&apos; https://api.exchangeratesapi.io https://maps.googleapis.com https://*.clarity.ms https://sdk.split.io https://events.split.io wss://proxy.clickup.codox.io wss://sm-dsm.stage.codox.io https://alb.clickup.codox.io https://sentry.io https://*.servicebell.com wss://api.servicebell.com https://browser-http-intake.logs.datadoghq.com https://*.browser-intake-datadoghq.com https://payments.sandbox.braintree-api.com https://origin-analytics-sand.sandbox.braintree-api.com https://api.allorigins.win https://www.google-analytics.com https://core.thepointyspritesclub.com https://stats.g.doubleclick.net https://canny.io https://www.facebook.com https://sdk.minervaknows.com https://api.minervaknows.com https://api.zapier.com https://zapier.com https://x.clearbit.com https://app.pendo.io https://data.pendo.io https://pendo-static-5086206243897344.storage.googleapis.com https://us-central1-adaptive-growth.cloudfunctions.net https://api.giphy.com https://*.litix.io https://*.wistia.com https://embedwistia-a.akamaihd.net https://*.walkme.com wss://search.clickup-qa.com wss://search.clickup-staging.com wss://search.clickup-prod.com wss://search.clickup-eu.com https://*.pointmediatracker.com https://*.marketo.net https://*.facebook.net https://*.tiktok.com http://localhost:23435 http://localhost:39214 http://127.0.0.1:23435 http://127.0.0.1:39214 https://attachments.clickup.com https://attachments2.clickup.com https://*.p.clickup-attachments.com https://*.ps.clickup-attachments.com https://invoices.clickup.com https://export.clickup.com https://gantt-export-prod.clickup.com wss://*.clickup.com wss://cu-prod-or-coeditor.clickup.com wss://ws.clickup.com wss://na001-ws.clickup.com wss://eu001-ws.clickup.com wss://ap001-ws.clickup.com wss://sa001-ws.clickup.com https://attch.clickup.com https://form-submit.clickup.com blob: https://apis.google.com https://js.live.net https://app.box.com https://www.dropbox.com https://cdn1.codox.io https://cdn1.stage.codox.io https://cdn2.stage.codox.io https://cdn.jsdelivr.net https://cdn.firstpromoter.com https://calendly.com https://miro.com https://platform.harvestapp.com https://*.wistia.net https://src.litix.io https://cdn.zapier.com https://ct.capterra.com https://cdn.servicebell.com https://www.googletagmanager.com https://www.googleadservices.com https://ssl.google-analytics.com https://hat.thepointyspritesclub.com https://www.redditstatic.com https://googleads.g.doubleclick.net https://m.servedby-buysellads.com https://snap.licdn.com https://www.google.com https://www.gstatic.com https://connect.facebook.net https://x.clearbitjs.com https://s.pinimg.com https://sdk-services.minervaknows.com https://pendo-io-static.storage.googleapis.com https://cdn.pendo.io https://content.webproduct.clickup.com https://data.webproduct.clickup.com https://cdn.pdst.fm todesktop-internal: https://code.highcharts.com https://*.singular.com https://*.singular.net https://datadoghq.com https://tpc.googlesyndication.com https://cdn.segment.com https://*.taboola.com https://*.ada.support https://app-cdn.clickup.com https://fast.wistia.com https://fonts.googleapis.com https: https://unpkg.com https://q.quora.com https://alb.reddit.com https://www.google.co.uk https://insight.adsrvr.org https://zapier-images.imgix.net https://tracking.g2crowd.com https://*.giphy.com https://maps.gstatic.com https://*.googleapis.com https://*.ggpht.com https://*.githubusercontent.com https://secure.gravatar.com https://www.linkedin.com https://s3.walkmeusercontent.com https://d3sbxpiag177w8.cloudfront.net https://fonts.gstatic.com https://*.getservicebell.com; child-src &apos;self&apos; blob: https://www.youtube.com https://player.vimeo.com https://fast.wistia.net https://www.facebook.com https://staticxx.facebook.com https://sdk-services.minervaknows.com https://*.walkme.com; frame-src https:; manifest-src &apos;self&apos; https://app-cdn.clickup.com; object-src &apos;none&apos;; report-uri /v1/csp/report-violation; frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>Warnings:
The report-uri directive has been deprecated in favor of the new report-to directive
</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Warnings:&lt;/p&gt;&lt;p&gt;The report-uri directive has been deprecated in favor of the new repo